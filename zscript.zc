version "3.7"

#include "zscript/material_handler.zc"

class ForceFieldHandler : MaterialHandler
{
    override void OnRegister()
    {
        materialName = "ForceField";
        textures.Push("FIREBLU1");
        health = 100;
        SetDamageFactor("Hitscan", 0);
    }

    override void MaterialLineDestroyed(WorldEvent e)
    {
        Super.MaterialLineDestroyed(e);
        e.damageLine.alpha = 0;
    }

    override void MaterialLineTick(Line l)
    {
        if (gameTic % 4 == 0 && l.GetHealth() < health)
        {
            l.SetHealth(l.GetHealth() + 1);

            //Console.Printf("Force field HP: %d", l.GetHealth());
        }

        l.alpha = Clamp(double(l.GetHealth()) / health, 0, 1);
    }
}


class DirtHandler : MaterialHandler
{
    override void OnRegister()
    {
        materialName = "Dirt";
        textures.Push("FLAT10");
        textures.Push("GRASS1");
        health = 20;
    }

    override void MaterialFloorDestroyed(WorldEvent e)
    {
        e.damageSector.SetTexture(Sector.Floor, TexMan.CheckForTexture("FLAT10", TexMan.TYPE_Any));

        int excess = e.newDamage - e.damageSector.GetHealth(SECPART_Floor);
        e.damageSector.SetHealth(SECPART_Floor, health);
        e.newDamage = excess % health;

        int floorHeight = e.damageSector.floorPlane.ZAtPoint(e.damageSector.centerSpot);
        int newHeight = 8 * (1 + excess / health) - floorHeight;
        e.damageSector.MoveFloor(1, newHeight, 0, 1, false, true);
    }
}

class CeilingLampHandler : MaterialHandler
{
    Array<Actor> lights;   // Indices line up w/ sectorsCeiling

    override void OnRegister()
    {
        materialName = "CeilingLamp";
        textures.Push("CEIL1_2");
        health = 10;
    }

    override void MaterialCeilingInit(Sector s)
    {
        Super.MaterialCeilingInit(s);

        Vector3 center;
        center.xy = s.centerspot;
        center.z = s.ceilingPlane.ZAtPoint(center.xy);

        let light = Actor.Spawn("PointLight", center);
        light.args[0] = 255; // r
        light.args[1] = 255; // g
        light.args[2] = 255; // b
        light.args[3] = 256; // radius

        lights.Push(light);
    }

    override void MaterialCeilingDestroyed(WorldEvent e)
    {
        Super.MaterialCeilingDestroyed(e);
        int i = sectorsCeiling.Find(e.damageSector);

        if (i < sectorsCeiling.Size())
        {
            lights[i].Destroy();
            lights[i] = null;
        }
    }
}

class WoodHandler : MaterialHandler
{
    override void OnRegister()
    {
        materialName = "Wood";
        textures.Push("FLAT5_2");
        textures.Push("WOOD12");
        health = 50;
    }

    override void Material3dDestroyed(WorldEvent e)
    {
        Super.Material3dDestroyed(e);

        e.damageSector.MoveFloor(1, 1024, 0, 1, false, true);
        e.damageSector.MoveCeiling(1, -1024, 0, 1, false);
    }
}